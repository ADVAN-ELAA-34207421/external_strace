diff -r -u -d /home/enh/Downloads/strace-4.6/defs.h ./defs.h
--- /home/enh/Downloads/strace-4.6/defs.h	2011-03-15 10:19:09.000000000 -0700
+++ ./defs.h	2014-01-03 15:29:29.552592456 -0800
@@ -33,10 +33,6 @@
 #include "config.h"
 #endif
 
-#ifdef MIPS
-#include <sgidefs.h>
-#endif
-
 #ifdef linux
 #include <features.h>
 #endif
@@ -319,13 +315,19 @@
 #  define PTRACE_GETSIGINFO	0x4202
 # endif
 # if !HAVE_DECL_PTRACE_O_TRACEFORK
+#  ifndef PTRACE_O_TRACEFORK
 #  define PTRACE_O_TRACEFORK	0x00000002
+#  endif
 # endif
 # if !HAVE_DECL_PTRACE_O_TRACEVFORK
+#  ifndef PTRACE_O_TRACEVFORK
 #  define PTRACE_O_TRACEVFORK	0x00000004
+#  endif
 # endif
 # if !HAVE_DECL_PTRACE_O_TRACECLONE
+#  ifndef PTRACE_O_TRACECLONE
 #  define PTRACE_O_TRACECLONE	0x00000008
+#  endif
 # endif
 
 # if !HAVE_DECL_PTRACE_EVENT_FORK
diff -r -u -d /home/enh/Downloads/strace-4.6/file.c ./file.c
--- /home/enh/Downloads/strace-4.6/file.c	2011-03-03 18:08:02.000000000 -0800
+++ ./file.c	2014-01-03 15:29:29.552592456 -0800
@@ -45,6 +45,21 @@
 # define kernel_dirent dirent
 #endif
 
+#ifdef HAVE_ANDROID_OS
+#include <linux/fadvise.h>
+
+// ANDROID: From linux/dirent.h
+
+struct dirent64 {
+ __u64 d_ino;
+ __s64 d_off;
+ unsigned short d_reclen;
+ unsigned char d_type;
+ char d_name[256];
+};
+
+#endif /* HAVE_ANDROID_OS */
+
 #ifdef LINUX
 #  ifdef LINUXSPARC
 struct stat {
diff -r -u -d /home/enh/Downloads/strace-4.6/ioctl.c ./ioctl.c
--- /home/enh/Downloads/strace-4.6/ioctl.c	2011-01-15 12:15:31.000000000 -0800
+++ ./ioctl.c	2014-01-03 15:29:29.552592456 -0800
@@ -155,9 +155,11 @@
 	case 0x03:
 	case 0x12:
 		return block_ioctl(tcp, code, arg);
+#ifndef HAVE_ANDROID_OS
 	case 0x22:
 		return scsi_ioctl(tcp, code, arg);
 #endif
+#endif
 	default:
 		break;
 	}
diff -r -u -d /home/enh/Downloads/strace-4.6/ipc.c ./ipc.c
--- /home/enh/Downloads/strace-4.6/ipc.c	2010-03-31 15:22:01.000000000 -0700
+++ ./ipc.c	2014-01-03 15:29:29.552592456 -0800
@@ -40,9 +40,15 @@
 
 #include <fcntl.h>
 #include <sys/ipc.h>
+#ifdef HAVE_ANDROID_OS
+#include <linux/sem.h>
+#include <linux/msg.h>
+#include <linux/shm.h>
+#else
 #include <sys/sem.h>
 #include <sys/msg.h>
 #include <sys/shm.h>
+#endif
 
 #ifndef MSG_STAT
 #define MSG_STAT 11
diff -r -u -d /home/enh/Downloads/strace-4.6/process.c ./process.c
--- /home/enh/Downloads/strace-4.6/process.c	2011-03-14 14:58:59.000000000 -0700
+++ ./process.c	2014-01-03 15:29:29.552592456 -0800
@@ -114,6 +114,10 @@
 #define GETGROUPS32_T __kernel_gid32_t
 #endif /* LINUX */
 
+#ifdef HAVE_ANDROID_OS
+#define __sched_priority sched_priority
+#endif
+
 #if defined(LINUX) && defined(IA64)
 # include <asm/ptrace_offsets.h>
 # include <asm/rse.h>
diff -r -u -d /home/enh/Downloads/strace-4.6/signal.c ./signal.c
--- /home/enh/Downloads/strace-4.6/signal.c	2011-03-10 15:14:47.000000000 -0800
+++ ./signal.c	2014-01-07 14:53:10.703113250 -0800
@@ -40,6 +40,12 @@
 #include <sys/user.h>
 #include <fcntl.h>
 
+#ifdef HAVE_ANDROID_OS
+//FIXME use "sigprocmask" or something
+#define sigmask(sig)    (1UL << ((sig) - 1))
+#define sigcontext_struct sigcontext
+#endif
+
 #ifdef SVR4
 #include <sys/ucontext.h>
 #endif /* SVR4 */
@@ -455,7 +461,7 @@
 
 #endif /* LINUX */
 
-#if __GLIBC_MINOR__ < 1
+#if __GLIBC_MINOR__ < 1 && !defined(HAVE_ANDROID_OS)
 /* Type for data associated with a signal.  */
 typedef union sigval
 {
@@ -1091,7 +1097,12 @@
 
 #ifdef HAVE_SIGACTION
 
-#ifdef LINUX
+/* For MIPS, struct sigaction is common between kernel and userland */
+#if defined(LINUX) && !defined(MIPS)
+#define USE_OLD_SIGACTION
+#endif
+
+#ifdef USE_OLD_SIGACTION
 struct old_sigaction {
 	__sighandler_t __sa_handler;
 	unsigned long sa_mask;
@@ -1099,7 +1110,7 @@
 	void (*sa_restorer)(void);
 };
 #define SA_HANDLER __sa_handler
-#endif /* LINUX */
+#endif /* USE_OLD_SIGACTION */
 
 #ifndef SA_HANDLER
 #define SA_HANDLER sa_handler
@@ -1110,7 +1121,7 @@
 struct tcb *tcp;
 {
 	long addr;
-#ifdef LINUX
+#ifdef USE_OLD_SIGACTION
 	sigset_t sigset;
 	struct old_sigaction sa;
 #else
@@ -1159,28 +1170,24 @@
 				kill(tcp->pid, SIGSTOP);
 			}
 #endif /* !USE_PROCFS */
-			tprintf("{%#lx, ", (long) sa.SA_HANDLER);
-#ifndef LINUX
-			printsigmask (&sa.sa_mask, 0);
+			tprintf("{%p, ", sa.SA_HANDLER);
+		}
+#ifndef USE_OLD_SIGACTION
+		printsigmask (&sa.sa_mask, 0);
 #else
-			long_to_sigset(sa.sa_mask, &sigset);
-			printsigmask(&sigset, 0);
+		long_to_sigset(sa.sa_mask, &sigset);
+		printsigmask(&sigset, 0);
 #endif
-			tprintf(", ");
-			printflags(sigact_flags, sa.sa_flags, "SA_???");
-#ifdef SA_RESTORER
-			if (sa.sa_flags & SA_RESTORER)
-				tprintf(", %p", sa.sa_restorer);
+		tprintf(", ");
+		printflags(sigact_flags, sa.sa_flags, "SA_???");
+#if defined(SA_RESTORER) && !defined(MIPS)
+		if (sa.sa_flags & SA_RESTORER)
+			tprintf(", %p", sa.sa_restorer);
 #endif
-			tprintf("}");
-		}
+		tprintf("}");
 	}
 	if (entering(tcp))
 		tprintf(", ");
-#ifdef LINUX
-	else
-		tprintf(", %#lx", (unsigned long) sa.sa_restorer);
-#endif
 	return 0;
 }
 
@@ -1492,6 +1499,7 @@
 		tcp->u_arg[0] = 0;
 		sp = regs.regs[29];
 		if (umove(tcp, sp, &si) < 0)
+			return 0;
 		tcp->u_arg[0] = 1;
 		tcp->u_arg[1] = si.si_mask;
 	} else {
@@ -1934,9 +1942,13 @@
 
 
 /* Structure describing the action to be taken when a signal arrives.  */
+#ifdef MIPS
+#define new_sigaction sigaction
+#define new_sigaction2 sigaction
+#else
 struct new_sigaction
 {
-	__sighandler_t __sa_handler;
+	__sighandler_t SA_HANDLER;
 	unsigned long sa_flags;
 	void (*sa_restorer) (void);
 	/* Kernel treats sa_mask as an array of longs. */
@@ -1945,12 +1957,12 @@
 /* Same for i386-on-x86_64 and similar cases */
 struct new_sigaction32
 {
-	uint32_t __sa_handler;
+	uint32_t SA_HANDLER;
 	uint32_t sa_flags;
 	uint32_t sa_restorer;
 	uint32_t sa_mask[2 * (NSIG / sizeof(long) ? NSIG / sizeof(long) : 1)];
 };
-
+#endif
 
 int
 sys_rt_sigaction(struct tcb *tcp)
@@ -1983,9 +1995,11 @@
 		r = umove(tcp, addr, &sa32);
 		if (r >= 0) {
 			memset(&sa, 0, sizeof(sa));
-			sa.__sa_handler = (void*)(unsigned long)sa32.__sa_handler;
+			sa.SA_HANDLER   = (void*)(unsigned long)sa32.SA_HANDLER;
 			sa.sa_flags     = sa32.sa_flags;
+#ifndef MIPS
 			sa.sa_restorer  = (void*)(unsigned long)sa32.sa_restorer;
+#endif
 			/* Kernel treats sa_mask as an array of longs.
 			 * For 32-bit process, "long" is uint32_t, thus, for example,
 			 * 32th bit in sa_mask will end up as bit 0 in sa_mask[1].
@@ -2013,14 +2027,14 @@
 	 * be manipulated by strace. In order to prevent the
 	 * compiler from generating code to manipulate
 	 * SA_HANDLER we cast the function pointers to long. */
-	if ((long)sa.__sa_handler == (long)SIG_ERR)
+	if ((long)sa.SA_HANDLER == (long)SIG_ERR)
 		tprintf("{SIG_ERR, ");
-	else if ((long)sa.__sa_handler == (long)SIG_DFL)
+	else if ((long)sa.SA_HANDLER == (long)SIG_DFL)
 		tprintf("{SIG_DFL, ");
-	else if ((long)sa.__sa_handler == (long)SIG_IGN)
+	else if ((long)sa.SA_HANDLER == (long)SIG_IGN)
 		tprintf("{SIG_IGN, ");
 	else
-		tprintf("{%#lx, ", (long) sa.__sa_handler);
+		tprintf("{%#lx, ", (long) sa.SA_HANDLER);
 	/* Questionable code below.
 	 * Kernel won't handle sys_rt_sigaction
 	 * with wrong sigset size (just returns EINVAL)
@@ -2039,7 +2053,7 @@
 	printsigmask(&sigset, 1);
 	tprintf(", ");
 	printflags(sigact_flags, sa.sa_flags, "SA_???");
-#ifdef SA_RESTORER
+#if defined(SA_RESTORER) && !defined(MIPS)
 	if (sa.sa_flags & SA_RESTORER)
 		tprintf(", %p", sa.sa_restorer);
 #endif
diff -r -u -d /home/enh/Downloads/strace-4.6/syscall.c ./syscall.c
--- /home/enh/Downloads/strace-4.6/syscall.c	2011-02-18 16:02:27.000000000 -0800
+++ ./syscall.c	2014-01-07 14:53:32.312851042 -0800
@@ -2600,6 +2600,7 @@
 	}
 
 	switch (known_scno(tcp)) {
+#ifndef __ARM_EABI__
 #ifdef SYS_socket_subcall
 	case SYS_socketcall:
 		decode_subcall(tcp, SYS_socket_subcall,
@@ -2612,6 +2613,7 @@
 			SYS_ipc_nsubcalls, shift_style);
 		break;
 #endif
+#endif
 #ifdef SVR4
 #ifdef SYS_pgrpsys_subcall
 	case SYS_pgrpsys:
diff -r -u -d /home/enh/Downloads/strace-4.6/system.c ./system.c
--- /home/enh/Downloads/strace-4.6/system.c	2011-02-22 02:22:13.000000000 -0800
+++ ./system.c	2014-01-03 15:29:29.552592456 -0800
@@ -32,6 +32,11 @@
 
 #include "defs.h"
 
+#ifdef HAVE_ANDROID_OS
+#undef __unused
+#include <linux/socket.h>
+#endif
+
 #ifdef LINUX
 #define _LINUX_SOCKET_H
 #define _LINUX_FS_H
@@ -83,7 +88,7 @@
 #include <linux/utsname.h>
 #endif
 
-#ifdef HAVE_ASM_SYSMIPS_H
+#ifdef MIPS
 #include <asm/sysmips.h>
 #endif
 
diff -r -u -d /home/enh/Downloads/strace-4.6/time.c ./time.c
--- /home/enh/Downloads/strace-4.6/time.c	2011-03-03 18:08:02.000000000 -0800
+++ ./time.c	2014-01-03 15:29:29.552592456 -0800
@@ -33,7 +33,11 @@
 
 #ifdef LINUX
 #include <linux/version.h>
+#ifdef HAVE_ANDROID_OS
+#include <linux/timex.h>
+#else
 #include <sys/timex.h>
+#endif
 #include <linux/ioctl.h>
 #include <linux/rtc.h>
 
